[profile.default]
src = "src"
out = "out"
libs = ["lib"]
test = "test"
cache_path = "cache"
force = false
evm_version = "paris"
auto_detect_solc = false
offline = false
optimizer = true
optimizer_runs = 1000
verbosity = 2
ignored_error_codes = [5574]

# Foundry-specific configurations
[profile.default.fuzz]
runs = 1000
max_test_rejects = 65536
seed = '0x1'
dictionary_weight = 40
include_storage = true
include_push_bytes = true

[profile.default.invariant]
runs = 256
depth = 50
fail_on_revert = false
call_override = false
dictionary_weight = 80
include_storage = true
include_push_bytes = true

# Gas reporting
[profile.default.gas_reports]
"*" = ["src/**/*.sol"]

# RPC endpoints for different networks
[rpc_endpoints]
localhost = "http://127.0.0.1:8545"
mainnet = "${MAINNET_RPC_URL}"
goerli = "${GOERLI_RPC_URL}"
sepolia = "${SEPOLIA_RPC_URL}"
polygon = "${POLYGON_RPC_URL}"
arbitrum = "${ARBITRUM_RPC_URL}"
optimism = "${OPTIMISM_RPC_URL}"

# Etherscan API keys for verification
[etherscan]
mainnet = { key = "${ETHERSCAN_API_KEY}" }
goerli = { key = "${ETHERSCAN_API_KEY}" }
sepolia = { key = "${ETHERSCAN_API_KEY}" }
polygon = { key = "${POLYGONSCAN_API_KEY}" }
arbitrum = { key = "${ARBISCAN_API_KEY}" }
optimism = { key = "${OPTIMISTIC_ETHERSCAN_API_KEY}" }

# CI/CD optimized profile
[profile.ci]
fuzz = { runs = 10000 }
verbosity = 4

# Intense fuzzing profile
[profile.intense]
fuzz = { runs = 50000 }
invariant = { runs = 1000, depth = 100 }

# Lite profile for quick testing
[profile.lite]
fuzz = { runs = 10 }
invariant = { runs = 5, depth = 5 }